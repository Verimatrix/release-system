<?xml version="1.0"?>
<!--
  ~ @package   AkeebaReleaseSystem
  ~ @copyright Copyright (c)2010-2021 Nicholas K. Dionysopoulos / Akeeba Ltd
  ~ @license   GNU General Public License version 3, or later
  -->

<project name="AkeebaReleaseSystem" description="Akeeba Release System" default="git" >
	<import file="${phing.dir}/../../buildfiles/phing/common.xml" />

	<fileset dir="${dirs.component}" id="component">
		<include name="backend/**" />
		<include name="frontend/**" />
		<include name="language/**" />
		<include name="media/**" />

		<include name="*" />

		<exclude name="cli/**" />
		<exclude name="LICENSE.txt" />
		<exclude name="script.ars.php" />
	</fileset>

	<fileset dir="${dirs.release}" id="package">
		<include name="com_*.zip" />
		<include name="mod_*.zip" />
		<include name="plg_*.zip" />
		<include name="lib_*.zip" />
		<include name="file_fef*.zip" />
		<include name="pkg_*.xml" />
		<include name="*.txt" />
		<include name="script.ars.php" />
	</fileset>

	<!--
	====================================================================================================
	Tasks - Project management
	====================================================================================================
	-->

	<target name="release">
		<!-- Make sure there is a tag that's the same as the version number -->
		<gittag gitPath="${git.binary}"
				repository="${dirs.root}"
				list="true" pattern="${version}"
				outputProperty="git.tags"
		/>

		<php function="trim" returnProperty="git.tags">
			<param value="${git.tags}" />
		</php>

		<if>
			<not>
				<equals arg1="${git.tags}" arg2="${version}" />
			</not>
			<then>
				<fail message="You must tag version ${version} before trying to release it." />
			</then>
		</if>

		<!-- Verify the tag. If it can't verify the tag the build fails. -->
		<gittag gitPath="${git.binary}"
				repository="${dirs.root}"
				verify="true"
				object="${version}"
				outputProperty="git.verify"
		/>

		<!-- Make a draft release -->
		<loadfile property="github.release.body" file="${dirs.root}/RELEASENOTES.md" />

		<GitHubRelease token="${github.token}" organization="${github.organization}" repository="${github.repository}"
					   tagName="${version}" releaseName="v.${version}" releaseBody="${github.release.body}" draft="1"
					   propName="github.release.id" />

		<!-- Upload the release files -->
		<GitHubAsset token="${github.token}" organization="${github.organization}" repository="${github.repository}"
					 file="${dirs.release}/pkg_ars-${version}.zip"
					 releaseId="${github.release.id}" />

		<!-- Publish the release -->
		<GitHubRelease token="${github.token}" organization="${github.organization}" repository="${github.repository}"
					   tagName="${version}" draft="0" />
	</target>

	<!--
	====================================================================================================
	Obsolete
	====================================================================================================
	-->

	<target name="docsdeploy">
		<echo message="The docsdeploy target is obsolete. The documentation is now in the wiki" />
	</target>

	<target name="documentation" description="The documentation">
		<echo message="The documentation target is obsolete. The documentation is now in the wiki" />
	</target>
</project>
